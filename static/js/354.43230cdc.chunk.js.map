{"version":3,"file":"static/js/354.43230cdc.chunk.js","mappings":"+OACA,EAA8B,iCAA9B,EAAoF,wC,oBCDvEA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,gBAAgBC,KAA1B,EAMtBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,gBAAgBG,MAA1B,E,qCCIvB,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYV,GAE7B,GAAwBW,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAAC,GACA,SAApBA,EAAIC,OAAON,KACbC,EAAQI,EAAIC,OAAOC,OACU,WAApBF,EAAIC,OAAON,MACpBG,EAAUE,EAAIC,OAAOC,MAExB,EAeD,OACE,+BACE,kBAAMC,SAfW,SAAAH,GACnBA,EAAII,iBAEA,OAACZ,QAAD,IAACA,GAAAA,EAAUa,MAAK,SAAAC,GAAE,OAAIA,EAAGX,OAASA,CAAhB,IAGpBY,MAAM,GAAD,OAAIZ,EAAJ,4BAFLL,GAASkB,EAAAA,EAAAA,IAAW,CAAEb,KAAAA,EAAME,OAAAA,KAK9BD,EAAQ,IACRE,EAAU,GACX,EAIiCW,UAAWC,EAAzC,WACE,SAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,QACLC,OAAO,QACPC,MAAM,OACNb,MAAOP,EACPqB,SAAUjB,EACVJ,KAAK,OACLc,UAAWC,EACXO,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGV,SAACR,EAAA,EAAD,CACEC,KAAK,MACLC,KAAK,QACLC,OAAO,QACPC,MAAM,SACNb,MAAOL,EACPmB,SAAUjB,EACVJ,KAAK,SACLsB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,SAACC,EAAA,EAAD,CACER,KAAK,SACLS,QAAQ,YACRC,WAAW,SAACC,EAAA,EAAD,IAHb,6BAUP,CC5ED,MAA8B,iCAA9B,EAAmF,uCAAnF,EAA8I,uCAA9I,EAAwM,sC,oBCQzL,SAASC,IACtB,IAAMlC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYV,GAEvBK,GAASK,EAAAA,EAAAA,IAAYN,GACrBsC,EAAgB,OAAGjC,QAAH,IAAGA,OAAH,EAAGA,EAAUJ,QAAO,qBAAGO,KACtC+B,cAAcC,SAASvC,EADY,IAQ1C,OAJAwC,EAAAA,EAAAA,YAAU,WACRtC,GAASuC,EAAAA,EAAAA,MACV,GAAE,CAACvC,KAGF,gBAAImB,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,oCACmBe,QADnB,IACmBA,OADnB,EACmBA,EAAkBK,UAFvC,OAIGL,QAJH,IAIGA,OAJH,EAIGA,EAAkBM,KAAI,SAAAC,GAAG,OACxB,gBAAiBvB,UAAWC,EAA5B,WACE,eAAGD,UAAWC,EAAd,UACGsB,EAAIrC,KADP,KACeqC,EAAInC,WAGnB,SAACoC,EAAA,EAAD,CACE,aAAW,SACXC,QAAS,kBAAM5C,GAAS6C,EAAAA,EAAAA,IAAcH,EAAII,IAAjC,EACTC,MAAM,UAHR,UAKE,SAACC,EAAA,EAAD,QAVKN,EAAII,GADW,MAiB/B,CC3CD,I,EAAA,EAAgC,8BAAhC,EAAuE,uBAAvE,EAA6G,6BAA7G,EAA0J,8B,UCM3I,SAASG,IACtB,IAAMjD,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAKkB,UAAWC,EAAhB,WACE,mBAAO8B,QAAQ,OAAO/B,UAAWC,EAAjC,+BACmB,iBAAMD,UAAWC,EAAjB,sBAEnB,SAACC,EAAA,EAAD,CACE8B,WAAS,EACT1B,MAAM,SACNF,KAAK,QACLC,OAAO,QACPF,KAAK,OACLH,UAAWC,EACXM,SAAU,SAAA0B,GAAC,OAAIpD,GAASqD,EAAAA,EAAAA,GAAcD,EAAEzC,OAAOC,MAAMwB,eAA1C,MAIlB,CCpBc,SAASkB,IACtB,IAAMC,EAAUC,EAAAA,GAAAA,QAAH,qGAMb,OACE,4BACE,SAACC,EAAA,EAAD,CAAQ7B,MAAM,cACd,UAAC2B,EAAD,YACE,uDACA,SAACxD,EAAD,KACA,SAACkD,EAAD,KACA,SAACf,EAAD,SAIP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ContactForm\":\"ContactForm_ContactForm__QuT-m\",\"ContactForm__input\":\"ContactForm_ContactForm__input__aPjmg\",\"ContactForm__btn\":\"ContactForm_ContactForm__btn__co7hB\"};","export const selectContacts = state => state.contactsReducer.items;\n\nexport const selectIsLoading = state => state.isLoading;\n\nexport const selectError = state => state.contactsReducer.error;\n\nexport const selectFilterValue = state => state.contactsReducer.filter;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = evt => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    } else if (evt.target.name === 'number') {\n      setNumber(evt.target.value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (!contacts?.find(el => el.name === name)) {\n      dispatch(addContact({ name, number }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.ContactForm}>\n        <TextField\n          type=\"text\"\n          size=\"small\"\n          margin=\"dense\"\n          label=\"Name\"\n          value={name}\n          onChange={handleInputChange}\n          name=\"name\"\n          className={css.ContactForm__input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <TextField\n          type=\"tel\"\n          size=\"small\"\n          margin=\"dense\"\n          label=\"Number\"\n          value={number}\n          onChange={handleInputChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          startIcon={<PersonAddAlt1Icon />}\n        >\n          Add contact\n        </Button>\n      </form>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  handleInputChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList\":\"ContactList_ContactList__2mXfy\",\"ContactList__item\":\"ContactList_ContactList__item__B+7D-\",\"ContactList__text\":\"ContactList_ContactList__text__EGfQe\",\"ContactList_find\":\"ContactList_ContactList_find__76piz\"};","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectFilterValue } from 'redux/contacts/selectors';\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const filter = useSelector(selectFilterValue);\n  const filteredContacts = contacts?.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.ContactList}>\n      <p className={css.ContactList_find}>\n        Total contacts: {filteredContacts?.length}\n      </p>\n      {filteredContacts?.map(elm => (\n        <li key={elm.id} className={css.ContactList__item}>\n          <p className={css.ContactList__text}>\n            {elm.name}: {elm.number}\n          </p>\n\n          <IconButton\n            aria-label=\"delete\"\n            onClick={() => dispatch(deleteContact(elm.id))}\n            color=\"primary\"\n          >\n            <DeleteIcon />\n          </IconButton>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  onClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Filter__input\":\"Filter_Filter__input__wYlsf\",\"Filter\":\"Filter_Filter__Gzk39\",\"Filter__text\":\"Filter_Filter__text__R7YBj\",\"Filter__block\":\"Filter_Filter__block__8aiG+\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contactsSlice';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.Filter__block}>\n      <label htmlFor=\"find\" className={css.Filter}>\n        Find contacts by <span className={css.Filter__text}>name</span>\n      </label>\n      <TextField\n        fullWidth\n        label=\"search\"\n        size=\"small\"\n        margin=\"dense\"\n        type=\"text\"\n        className={css.Filter__input}\n        onChange={e => dispatch(filterContact(e.target.value.toLowerCase()))}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n","import { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList/';\nimport Filter from 'components/Filter';\n\nexport default function Contacts() {\n  const Wrapper = styled.section`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  `;\n\n  return (\n    <div>\n      <Helmet title=\"Contacts\" />\n      <Wrapper>\n        <h1>Manage your contacts list</h1>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Wrapper>\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contactsReducer","items","selectFilterValue","filter","ContactForm","dispatch","useDispatch","contacts","useSelector","useState","name","setName","number","setNumber","handleInputChange","evt","target","value","onSubmit","preventDefault","find","el","alert","addContact","className","css","TextField","type","size","margin","label","onChange","pattern","title","required","Button","variant","startIcon","PersonAddAlt1","ContactList","filteredContacts","toLowerCase","includes","useEffect","fetchContacts","length","map","elm","IconButton","onClick","deleteContact","id","color","Delete","Filter","htmlFor","fullWidth","e","filterContact","Contacts","Wrapper","styled","Helmet"],"sourceRoot":""}